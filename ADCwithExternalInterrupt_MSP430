#include<msp430.h>
unsigned int i;
unsigned int value;
float voltage;
void adc_config()
{
    ADC10AE0 &= ~(1 << 0);
    ADC10AE0 |= (1 << 0); //Enable ADC for pin 1.0
    ADC10CTL1 |= (0b0000 << 12); //Single conversion for channel 0
    ADC10CTL0 |= (0b000 << 13); //Reference Vcc=VR+ ,Vss=VR-
    ADC10CTL0 |= (0b11 << 11); //Sample time 64 Clkcycles (if 1MHz = ~64us)
    ADC10CTL0 |= (1 << 4); //ADC ON
}
void gpio_init()
{
    P1OUT &= 0x00;            //Reset the register
    P1DIR &= 0x00;            //Reset the register
    P1DIR |= (1 << 6);        //P1.6 pin output 
    P1REN |= (1 << 3);        // Enable internal pull-up/down resistors
    P1OUT |= (1 << 3);        // Select pull-up mode for P1.3
    P1IE |= (1 << 3);         // P1.3 interrupt enabled
    P1IES = 0;                // Reset the P1IES Register
    P1IES |= (1 << 3);        // P1.3 Hi/lo edge
    P1IFG &= ~(1 << 3);       // Reset the Interrupt flag
}
void adc_converison()
{
    ADC10CTL0 |= (0b11 << 0); //ADC Enbale conversion and start off conversion
    while (ADC10CTL1 & (1 << 0)); //Checking the ADC10BUSY bit
    for(i=0; i<5000; i++); //small delay
    value = ADC10MEM; //Variable to store adc value
}  
int main()
{
    WDTCTL = WDTPW | WDTHOLD; //stop watchdog timer
    
    gpio_init(); //Gpio initialization function
    adc_config(); //ADC initialization
    _enable_interrupt(); //Global interrupt enable function
    
}
#pragma vector = PORT1_VECTOR
__interrupt void Port_1(void)
{
    P1OUT |= (1 << 6); //Turn on led at p1.6
    adc_converison();  //adc conversion function
    voltage = value*3.3/1023; //Variable to convert adc value into voltage
    P1OUT &= ~(1 << 6); //Turn off led at p1.6
    for(i=0; i<50000; i++); //Small delay
    P1IFG &= ~(1 << 3); //Clear the interrupt flag
   
}
