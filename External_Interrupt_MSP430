#include <msp430.h>
volatile unsigned int i;
int main(void)
{
    
    WDTCTL = WDTPW + WDTHOLD;  // Stop watchdog timer
    P1OUT &= 0x00;            //Reset the register
    P1DIR &= 0x00;            //Reset the register
    P1DIR |= 0x41;            // P1.0 and P1.6 pins output 
    P1REN |= (1 << 3);        // Enable internal pull-up/down resistors
    P1OUT |= (1 << 3);        // Select pull-up mode for P1.3
    P1IE |= (1 << 3);         // P1.3 interrupt enabled
    P1IES = 0;                // Reset the P1IES Register
    P1IES |= (1 << 3);        // P1.3 Hi/lo edge
    P1IFG &= ~(1 << 3);       // Reset the Interrupt flag
    _enable_interrupt();      // Function to enable interrupt
    while(1)
    {
      P1OUT |= (1 << 0);
      for(i=0; i<50000; i++);
      P1OUT &= ~(1 << 0);
       for(i=0; i<50000; i++);
    }

}
#pragma vector = PORT1_VECTOR
__interrupt void Port_1(void)
{
    P1OUT |= (1 << 6);
    for(i=0; i<50000; i++);
    P1OUT &= ~(1 << 6);
    P1IFG &= ~BIT3;
   
}
